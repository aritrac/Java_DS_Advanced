package solution.aritra.problem028;

import solution.aritra.linkedlist.singlelinklist.operations.LinkedList;
import solution.aritra.utils.node.defs.GenerateSLL;
import solution.aritra.utils.node.defs.ListNode;

/**
 * Author: Aritra Chatterjee
 * Description: We will try to find the middle of the linked list for which we dont know the length
 */
public class FindMiddleOfLinkedList {
    public static void main(String[] args) {
        GenerateSLL listGen = new GenerateSLL();
        LinkedList sll = listGen.createSLL(10); //generating a random list of size 10

        //printing out the autogenerated list
        System.out.println(sll);

        ListNode middleOfList = findMiddleOfLinkedList(sll.getHead());
        System.out.println("The middle of the list is " + middleOfList.getData());
    }

    public static ListNode findMiddleOfLinkedList(ListNode head){
        ListNode slowPtr = head;
        ListNode fastPtr = head;
        //move fast pointer twice as fast as the slow pointer
        while(fastPtr.getNext().getNext() != null){
            slowPtr = slowPtr.getNext();
            fastPtr = fastPtr.getNext().getNext();
        }
        return slowPtr;
    }
}
